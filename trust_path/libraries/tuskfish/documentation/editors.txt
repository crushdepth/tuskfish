EDITORS
=======
I spent a fair bit of time looking at different WYSIWYG editors for the data entry form. My idea
was to go with an ultralight editor in keeping with the ultralight nature of Tuskfish. However,
as it turns out most of the ultralight editor projects I looked at were abandoned, broken or both.
It also turns out that, when you take dependencies into consideration, most of them aren't actually
that much smaller than some of the more fully featured editors and they are far more flaky.

So I ended up with two viable options:

1. TinyMCE: It's a solid, mainstream editor, has every feature you could reasonably want and it's
relatively small. At least, it *can* be relatively small if you don't switch on a ridiculous number
of options. It is embarrassingly easy to integrate and the script can be pulled down from a CDN with
a single link. This will be the default editor for Tuskfish.

2. Trumbowyg: Possibly the smallest editor out there, not as polished as TinyMCE but it has all
the basic features you need. If you want a ultralight alternative, use this one.

SETTING UP TRUMBOWYG
====================

1. Download the Trumbowyg package and install it in /templates/layouts/trumbowyg. You can get it from:
https://alex-d.github.io/Trumbowyg/

2. Add the following link in the head section of the layout file your are using for your admin pages:

<!-- Trumbowyg editor -->
<link rel="stylesheet" href="<?php echo TFISH_THEMES_URL . '/trumbowyg/dist/ui/trumbowyg.min.css'; ?>">

3. Add the following link at the bottom of the body section of the layout file. Make sure it comes
after the jQuery link, as it requires jQuery to run:

<!-- Trumbowyg editor -->
<script src="<?php echo TFISH_THEMES_URL . '/trumbowyg/dist/trumbowyg.min.js'; ?>"></script>

4. Open /trust_path/libraries/tuskfish/forms/data_entry.html and data_edit.html. Locate the teaser
and description fields. If these currently use textarea inputs, delete them and replace with a
simple <div> as follows (Trumbowyg turns divs into editor boxes): 

<!-- Teaser -->
<div id="teaser" name="teaser" class="text-left"></div>

<!-- Description -->
<div id="description" name="description" class="text-left"></div>

5. Add the following code at the bottom of both files:

<!-- Ready the editor -->
<script>
    window.onload = function() {
        $('#teaser').trumbowyg();
        $('#description').trumbowyg();
    };
</script>


SETTING UP TINYMCE
==================
TinyMCE is enabled by default, but if you turned it off and want to get it back:

1. Include the TinyMCE script code by putting the following link in the header section of the
layout file you are using for the admin section of your site:

<script src="//cdn.tinymce.com/4/tinymce.min.js"></script>

Alternatively, you can download the package, stick it in /templates/tinymce/ and serve it from your
own site (in which case you need to change the link above to point at your local version), but why
bother.

2. Open /trust_path/libraries/tuskfish/forms/data_entry.html and data_edit.html in your IDE. Locate
the teaser and description form fields. By default, TinyMCE converts textareas into editor boxes, so
make sure these fields contain textarea inputs as follows:

In data_entry.html use:

<!-- Teaser -->
<textarea id="teaser" name="teaser" required></textarea>

<!-- Description -->
<textarea id="description" name="description" required></textarea>

In data_edit.html use:

<!-- Teaser -->
<textarea id="teaser" name="teaser" required><?php if (isset($content->teaser)) { echo $content->teaser; } ?></textarea>

<!-- Description -->
<textarea id="description" name="description" required><?php if (isset($content->description)) { echo $content->description; } ?></textarea>

3. Add the following code at the bottom of both files:

<script>
	tinymce.init({ selector:'textarea' });
</script>

4. If you want to customise the toolbars on the editor, you can. You just need to list all the
options you want inside this tinymce.init() function above; see the following page for details:

https://www.tinymce.com/docs/demo/basic-example/

5. The default toolbar configuration in use is as follows (include this as in the head of your 
layout file). Note that "raw" encoding is in use, this just encodes the & < > " characters.
Actually I would prefer that no encoding is done as it breaks database searches involving these
character, but anyway, that's how it currently works. The raw encoding also prevents accented
characters getting turned into entities, which is completely unnecessary in UTF-8.

<script>
	tinymce.init({
    selector: "textarea",
	entity_encoding: "raw",
	plugins: "code,anchor,link,charmap,codesample,image,media,emoticons,visualblocks,table,hr,wordcount,lists,autosave,fullscreen",
	menubar: "view,insert,table",
	toolbar: "code | undo redo | styleselect | bold italic removeformat | bullist numlist | link unlink | image media codesample | alignleft aligncenter alignright | table | superscript subscript charmap hr | emoticons visualblocks fullscreen",
	image_caption: true
    });
</script>